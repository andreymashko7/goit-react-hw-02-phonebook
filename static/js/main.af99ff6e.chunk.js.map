{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","matchContact","props","onSubmit","contacts","namesInPhonebook","reduce","acc","contact","numbersInPhonebook","includes","alert","this","className","s","form","htmlFor","label","type","onChange","placeholder","input","button","Component","ContactList","onDeleteContact","map","id","onClick","Filter","App","filter","addContact","shortid","generate","changeFilter","getVisibleContacts","normalizedFilter","toLocaleLowerCase","deleteContact","contactId","prevState","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af99ff6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__nnQNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__iQ96O\",\"button\":\"ContactForm_button__kPSUA\"};","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n    if (this.matchContact()) {\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(name, number);\r\n  };\r\n\r\n  matchContact = () => {\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    const namesInPhonebook = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      []\r\n    );\r\n\r\n    const numbersInPhonebook = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      []\r\n    );\r\n\r\n    if (\r\n      namesInPhonebook.includes(name) ||\r\n      numbersInPhonebook.includes(number)\r\n    ) {\r\n      alert(`${name}${number} is already in contacts!!!`);\r\n      return true;\r\n    }\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      alert(\"Please enter all fields\");\r\n      return true;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label htmlFor=\"name\" className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Rosie Simpson\"\r\n            className={s.input}\r\n          ></input>\r\n        </label>\r\n\r\n        <label htmlFor=\"number\" className={s.label}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"459-12-56\"\r\n            className={s.input}\r\n          ></input>\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport \"./ContactList.css\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className=\"Contacts__item\">\r\n          <p className=\"Contacts__text\">\r\n            {name} : {number}\r\n          </p>\r\n\r\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label}>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  reset() {\n    this.setState({ name: \"\", number: \"\" });\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}